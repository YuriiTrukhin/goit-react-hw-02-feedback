{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","FeedbackOptions","onLeaveFeedback","className","styles","button","type","name","onClick","Notification","message","App","state","toSetState","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PA6BeA,EA5BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,8BACE,8CAEF,8BACE,+BACE,6BACE,sCAASJ,OAEX,6BACE,yCAAYC,OAEd,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,qDAAwBC,EAAxB,kBCZGC,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCYQC,EAfS,YAAgC,IAApBC,EAAmB,EAAnBA,gBAClC,OACE,qCACE,wBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASC,KAAK,OAAOC,QAASN,EAArE,kBAGA,wBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASC,KAAK,UAAUC,QAASN,EAAxE,qBAGA,wBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASC,KAAK,MAAMC,QAASN,EAApE,qBCHSO,EAPM,YAAsB,IAAXC,EAAU,EAAVA,QAC9B,OACE,mCACE,6BAAKA,OCCUC,E,4MACnBC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPkB,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAEG,OAAOV,KAAOS,EAAUF,EAAEG,OAAOV,MAAQ,O,EAGhDW,mBAAqB,WACnB,OAAO,EAAKN,MAAMnB,KAAO,EAAKmB,MAAMjB,IAAM,EAAKiB,MAAMlB,S,EAGvDyB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKT,MAAMnB,KAAc,EAAKyB,uB,uDAIjD,IAAItB,EAAQ0B,KAAKJ,qBACjB,OACE,qCACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBG,gBAAiBoB,KAAKT,eAE9B,IAAVjB,EACC,cAAC,EAAD,CAAcc,QAAQ,sBAEtB,cAAC,EAAD,UACE,cAAC,EAAD,CACEjB,KAAM6B,KAAKV,MAAMnB,KACjBC,QAAS4B,KAAKV,MAAMlB,QACpBC,IAAK2B,KAAKV,MAAMjB,IAChBC,MAAO0B,KAAKJ,qBACZrB,mBAAoByB,KAAKH,6C,GAnCNI,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c0417e45.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>Statistics</h2>\r\n      </div>\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            <p>Good:{good}</p>\r\n          </li>\r\n          <li>\r\n            <p>Neutral:{neutral}</p>\r\n          </li>\r\n          <li>\r\n            <p>Bad: {bad}</p>\r\n          </li>\r\n          <li>\r\n            <p>Total: {total}</p>\r\n          </li>\r\n          <li>\r\n            <p>Positive feeedback: {positivePercentage}%</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styles from \"../FeedbackOptions/FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = function ({ onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <button className={styles.button} type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n      <button className={styles.button} type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n      <button className={styles.button} type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = function ({message}) {\r\n  return (\r\n    <>\r\n      <h2>{message}</h2>\r\n    </>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics.js\";\nimport Section from \"./components/Section/Section.js\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions.js\";\nimport Notification from \"./components/Notification/Notification.js\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  toSetState = (e) => {\n    this.setState((prevState) => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    let total = this.countTotalFeedback();\n    return (\n      <>\n        <Section title=\"Pleaseleave feeedback\">\n          <FeedbackOptions onLeaveFeedback={this.toSetState} />\n        </Section>\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section>\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}